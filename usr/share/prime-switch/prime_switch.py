import os

def switch_offload():
    os.remove('/usr/share/X11/xorg.conf.d/10-nvidia.conf')
    
    nvidia = "# Do not edit this file!\n" \
             "# It will be rewrite after the upgrade\n\n" \
             "Section \"ServerLayout\"\n" \
            	 "Identifier\t\"Layout0\"\n" \
             "\tOption\t\"AllowNVIDIAGPUScreens\"\n" \
             "\tScreen\t0  \"iGPU\" 0 0\n" \
             "EndSection\n\n" \
             "# You may uncomment the following lines, if Xorg.log contains:\n" \
             "# (EE) NVIDIA: Use the -ignoreABI option to override this check\n\n" \
             "Section \"ServerFlags\"\n" \
             "\tOption\t\"IgnoreABI\" \"1\"\n" \
             "EndSection\n\n" \
             "Section \"Device\"\n" \
             "\tIdentifier\t\"iGPU\"\n" \
             "\tDriver\t\"modesetting\"\n" \
             "\tBusID\t\"PCI:0:2:0\"\n" \
             "EndSection\n\n" \
             "Section \"Device\"\n" \
             "\tIdentifier\t\"dGPU\"\n" \
             "\tDriver\t\"nvidia\"\n" \
             "\tBusID\t\"PCI:1:0:0\"\n" \
             "EndSection\n\n" \
             "Section \"Screen\"\n" \
             "\tIdentifier\t\"iGPU\"\n" \
             "\tDevice\t\"iGPU\"\n" \
             "\tDefaultDepth\t24\n" \
             "\tSubSection\t\"Display\"\n" \
             "\t\tViewport\t0 0\n" \
             "\tEndSubSection\n" \
             "EndSection\n\n" \
             "Section \"OutputClass\"\n" \
             "\tIdentifier \"iGPU\"\n" \
             "\tMatchDriver \"i915\"\n" \
             "\tDriver \"modesetting\"\n" \
             "EndSection\n\n" \
             "Section \"OutputClass\"\n" \
             "\tIdentifier \"dGPU\"\n" \
             "\tMatchDriver \"nvidia-drm\"\n" \
             "\tDriver \"nvidia\"\n" \
             "\tOption \"AllowEmptyInitialConfiguration\"\n" \
             "\tOption \"PrimaryGPU\" \"yes\"\n" \
             "\tModulePath \"/usr/lib/nvidia/xorg\"\n" \
             "\tModulePath \"/usr/lib/xorg/modules\"\n" \
             "EndSection"
    
    nvidia_conf = open('/usr/share/xorg.conf.d/10-nvidia.conf', 'w+')
    nvidia_conf.write(nvidia)
    nvidia_conf.close()

    items = []
    for k, v in os.environ.items():
        items.append(v)
	
    if items[21].lower() == "gnome":
        os.unlink('/usr/share/gdm/greeter/autostart/optimus.desktop')
        os.unlink('/etc/xdg/autostart/optimus.desktop')

        os.remove("/usr/local/share/optimus.desktop")
    else:
        sddm =  "#!/bin/sh\n\n"
          
        sddm_desktop = open('/usr/share/sddm/scripts/Xsetup', 'w+')
        sddm_desktop.write(sddm)
        sddm_desktop.close()
    
    os.system('reboot')
    
def switch_prime():
    os.remove('/usr/share/X11/xorg.conf.d/10-nvidia.conf')
    
    nvidia = "Section \"Module\"\n" \
                    "\tLoad \"modesetting\"\n" \
                "EndSection\n\n" \
                "Section \"Device\"\n" \
                    "\tIdentifier \"nvidia\"\n" \
                    "\tDriver \"nvidia\"\n" \
                    "\tBusID \"PCI:1:0:0\"\n" \
                    "\tOption \"AllowEmptyInitialConfiguration\"\n" \
                "EndSection"
         
    nvidia_conf = open('/usr/share/X11/xorg.conf.d/10-nvidia.conf', 'w+')
    nvidia_conf.write(nvidia)
    nvidia_conf.close()
	
    items = []
    for k, v in os.environ.items():
        items.append(v)
    
    if items[21].lower() == "gnome":
        gdm = "[Desktop Entry]\n" \
			  "Type=Application\n" \
			  "Name=Optimus\n" \
			  "Exec=sh -c \"xrandr --setprovideroutputsource modesetting NVIDIA-0; xrandr --auto\"\n" \
			  "NoDisplay=true\n" \
			  "X-GNOME-Autostart-Phase=DisplayServer"

        gdm_desktop = open('/usr/local/share/optimus.desktop', 'w+')
        gdm_desktop.write(gdm)
        gdm_desktop.close()

        os.symlink('/usr/local/share/optimus.desktop', 
				   '/usr/share/gdm/greeter/autostart/optimus.desktop')

        os.symlink('/usr/local/share/optimus.desktop', 
				   '/etc/xdg/autostart/optimus.desktop')
    else:
        sddm =  "#!/bin/sh\n\n" \
                "xrandr --setprovideroutputsource modesetting NVIDIA-0\n" \
                "xrandr --auto"
          
        sddm_desktop = open('/usr/share/sddm/scripts/Xsetup', 'w+')
        sddm_desktop.write(sddm)
        sddm_desktop.close()
    
    os.system('reboot')
